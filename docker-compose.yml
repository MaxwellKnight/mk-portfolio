services:
  # Development web server
  web-dev:
    image: nginx:alpine
    volumes:
      - ./public:/usr/share/nginx/html
      - ./projects/6502-debugger/web:/usr/share/nginx/html/projects/6502-debugger
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "5173:80"
    profiles: [dev]
    restart: "no"
  
  # Production web server
  web-prod:
    image: nginx:alpine
    volumes:
      - ./public:/usr/share/nginx/html
      - ./projects/6502-debugger/web:/usr/share/nginx/html/projects/6502-debugger
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 3
    profiles: [prod]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`codeknight.dev`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.middlewares=redirect-to-https@docker"
      - "traefik.http.routers.web-secure.rule=Host(`codeknight.dev`)"
      - "traefik.http.routers.web-secure.entrypoints=websecure"
      - "traefik.http.routers.web-secure.tls=true"
      - "traefik.http.routers.web-secure.tls.certresolver=myresolver"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "com.centurylinklabs.watchtower.enable=true"
  
  # Traefik reverse proxy for production
  reverse-proxy:
    image: traefik:v3.1
    profiles: [prod]
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.address=:80"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=max@codeknight.dev"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    restart: unless-stopped
  
  # Watchtower for auto-updates
  watchtower:
    image: containrrr/watchtower
    profiles: [prod]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup --label-enable
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - TZ=UTC
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
    restart: unless-stopped
