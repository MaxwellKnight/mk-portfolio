name: Build and Test

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]
  workflow_dispatch:  # Allow manual triggers

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build-type: [Release, Debug]
      fail-fast: false  # Continue with other builds if one fails

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          /usr/local/lib/googletest
        key: ${{ runner.os }}-deps-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Install GTest
      run: |
        if [ ! -d "/usr/local/lib/googletest" ]; then
          sudo apt-get install -y libgtest-dev
          cd /usr/src/googletest
          sudo cmake .
          sudo cmake --build . --target install
        fi
        # Verify installation
        ls -la /usr/local/lib/libgtest*

    - name: Configure
      run: |
        cmake -B ${{ github.workspace }}/build-${{ matrix.build-type }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
              -DBUILD_TESTS=ON

    - name: Build
      run: |
        cmake --build ${{ github.workspace }}/build-${{ matrix.build-type }} \
              --config ${{ matrix.build-type }} \
              --parallel $(nproc)

    - name: Run tests
      working-directory: ${{ github.workspace }}/build-${{ matrix.build-type }}
      run: |
        ctest -C ${{ matrix.build-type }} --output-on-failure --verbose

    - name: Upload artifacts
      if: matrix.build-type == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.build-type }}
        path: |
          ${{ github.workspace }}/build-${{ matrix.build-type }}/**/*.a
          ${{ github.workspace }}/build-${{ matrix.build-type }}/**/*.so
          ${{ github.workspace }}/build-${{ matrix.build-type }}/**/*.wasm
        retention-days: 7

  wasm-build:
    name: WebAssembly Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v12
      with:
        version: latest
        actions-cache-folder: 'emsdk-cache'

    - name: Verify Emscripten installation
      run: |
        emcc --version

    - name: Configure WebAssembly build
      run: |
        mkdir -p wasm_build
        cd wasm_build
        emcmake cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build WebAssembly
      working-directory: wasm_build
      run: |
        make -j$(nproc)

    - name: Upload WebAssembly artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wasm-artifacts
        path: |
          wasm_build/**/*.wasm
          wasm_build/**/*.js
          wasm_build/**/*.html
        retention-days: 7
